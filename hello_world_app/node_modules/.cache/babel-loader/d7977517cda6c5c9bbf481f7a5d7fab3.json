{"ast":null,"code":"var _jsxFileName = \"/home/homietrainee/Documents/Exercises/ExercisesRuby/hello_world_app/src/components/DateHours.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport LineHour from './LineHour';\nconst ContainerHours = styled.div`\n  margin-top: 80px;\n  margin-left: 30px;\n  height: 950px;\n  width: 400px;\n`;\n\nconst setHour = hour => {\n  if (hour < 12) return `${hour} AM`;\n  if (hour == 12) return `${hour} PM`;\n  return `${hour - 12} PM`;\n};\n\nconst DateMonth = () => {\n  const hours = [];\n  let actualHour;\n  let isTimeSelected = false;\n  const totalHours = 24;\n  const selectedHour = 11;\n\n  for (let hour = 1; hour < totalHours; hour++) {\n    actualHour = setHour(hour);\n    hour == selectedHour ? isTimeSelected = true : isTimeSelected = false;\n    hours.push(React.createElement(LineHour, {\n      text: actualHour,\n      isTypeHour: isTimeSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(ContainerHours, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, hours);\n};\n\nexport default DateMonth;","map":{"version":3,"sources":["/home/homietrainee/Documents/Exercises/ExercisesRuby/hello_world_app/src/components/DateHours.js"],"names":["React","styled","LineHour","ContainerHours","div","setHour","hour","DateMonth","hours","actualHour","isTimeSelected","totalHours","selectedHour","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,cAAc,GAAGF,MAAM,CAACG,GAAI;;;;;CAAlC;;AAOA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,MAAGA,IAAI,GAAG,EAAV,EAAc,OAAQ,GAAEA,IAAK,KAAf;AACd,MAAGA,IAAI,IAAI,EAAX,EAAe,OAAQ,GAAEA,IAAK,KAAf;AAEf,SAAQ,GAAEA,IAAI,GAAG,EAAG,KAApB;AACD,CALD;;AAOA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,KAAK,GAAG,EAAd;AACA,MAAIC,UAAJ;AACA,MAAIC,cAAc,GAAG,KAArB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,YAAY,GAAG,EAArB;;AAEA,OAAK,IAAIN,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGK,UAA1B,EAAsCL,IAAI,EAA1C,EAA8C;AAC5CG,IAAAA,UAAU,GAAGJ,OAAO,CAACC,IAAD,CAApB;AACAA,IAAAA,IAAI,IAAIM,YAAR,GAAuBF,cAAc,GAAG,IAAxC,GAA+CA,cAAc,GAAG,KAAhE;AACAF,IAAAA,KAAK,CAACK,IAAN,CAAW,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEJ,UAAhB;AAA4B,MAAA,UAAU,EAAEC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AACD;;AAED,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KADH,CADF;AAKD,CAlBD;;AAoBA,eAAeD,SAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport LineHour from './LineHour';\n\nconst ContainerHours = styled.div`\n  margin-top: 80px;\n  margin-left: 30px;\n  height: 950px;\n  width: 400px;\n`;\n\nconst setHour = (hour) => {\n  if(hour < 12) return `${hour} AM`;\n  if(hour == 12) return `${hour} PM`;\n  \n  return `${hour - 12} PM`;\n}\n\nconst DateMonth = () => {\n  const hours = [];\n  let actualHour;\n  let isTimeSelected = false;\n  const totalHours = 24;\n  const selectedHour = 11;\n\n  for (let hour = 1; hour < totalHours; hour++) {\n    actualHour = setHour(hour);\n    hour == selectedHour ? isTimeSelected = true : isTimeSelected = false\n    hours.push(<LineHour text={actualHour} isTypeHour={isTimeSelected}/>);\n  }\n\n  return (\n    <ContainerHours>\n      {hours}\n    </ContainerHours>\n  )\n}\n\nexport default DateMonth;"]},"metadata":{},"sourceType":"module"}