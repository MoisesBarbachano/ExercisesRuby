{"ast":null,"code":"import * as actionTypes from '../constants/actionTypes';\nimport ArticlesApi from '../api/articlesApi';\nexport var addArticle = function addArticle(title, content) {\n  return function (dispatch) {\n    return ArticlesApi.addArticle(title, content).then(function (article) {\n      return ArticlesApi.getArticles().then(function (articles) {\n        dispatch(successLoadArticles(articles));\n      });\n    })[\"catch\"](function (error) {\n      console.log('error', error);\n    });\n  };\n};\nexport var editArticle = function editArticle(id) {\n  return {\n    type: actionTypes.EDIT_ARTICLE,\n    id: id\n  };\n};\nexport var infoArticle = function infoArticle(id) {\n  return function (dispatch) {\n    return ArticlesApi.getArticle(id).then(function (article) {\n      dispatch(successShowArticle(article));\n    })[\"catch\"](function (error) {\n      return console.log('error', error);\n    });\n  };\n};\nexport var successShowArticle = function successShowArticle(article) {\n  return {\n    type: actionTypes.INFO_ARTICLE,\n    article: article\n  };\n};\nexport var removeArticle = function removeArticle(id) {\n  return {\n    type: actionTypes.REMOVE_ARTICLE,\n    id: id\n  };\n};\nexport var allArticles = function allArticles(page, quantity_elements) {\n  return function (dispatch) {\n    return ArticlesApi.getArticles(page, quantity_elements).then(function (articles) {\n      dispatch(successLoadArticles(articles));\n    })[\"catch\"](function (error) {\n      console.log('error', error);\n    });\n  };\n};\nexport var successLoadArticles = function successLoadArticles(articles) {\n  return {\n    type: actionTypes.ALL_ARTICLES,\n    articles: articles\n  };\n};","map":{"version":3,"sources":["/home/homietrainee/Documents/Exercises/ExercisesRuby/rails-with-webpacker-react-master/app/javascript/actions/articles.js"],"names":["actionTypes","ArticlesApi","addArticle","title","content","dispatch","then","article","getArticles","articles","successLoadArticles","error","console","log","editArticle","id","type","EDIT_ARTICLE","infoArticle","getArticle","successShowArticle","INFO_ARTICLE","removeArticle","REMOVE_ARTICLE","allArticles","page","quantity_elements","ALL_ARTICLES"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,0BAA7B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,OAAR,EAAoB;AAC5C,SAAO,UAACC,QAAD,EAAc;AACnB,WAAOJ,WAAW,CAACC,UAAZ,CAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCE,IAAvC,CAA4C,UAAAC,OAAO,EAAI;AAC5D,aAAON,WAAW,CAACO,WAAZ,GAA0BF,IAA1B,CAA+B,UAAAG,QAAQ,EAAI;AAChDJ,QAAAA,QAAQ,CAACK,mBAAmB,CAACD,QAAD,CAApB,CAAR;AACD,OAFM,CAAP;AAGD,KAJM,WAIE,UAAAE,KAAK,EAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,KANM,CAAP;AAOD,GARD;AASD,CAVM;AAYP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD,EAAQ;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEhB,WAAW,CAACiB,YADb;AAELF,IAAAA,EAAE,EAAEA;AAFC,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACH,EAAD,EAAQ;AACjC,SAAO,UAACV,QAAD,EAAc;AACnB,WAAOJ,WAAW,CAACkB,UAAZ,CAAuBJ,EAAvB,EAA2BT,IAA3B,CAAgC,UAAAC,OAAO,EAAI;AAChDF,MAAAA,QAAQ,CAACe,kBAAkB,CAACb,OAAD,CAAnB,CAAR;AACD,KAFM,WAGE,UAAAI,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAAJ;AAAA,KAHP,CAAP;AAID,GALD;AAMD,CAPM;AASP,OAAO,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAACb,OAAD,EAAa;AAC7C,SAAO;AACLS,IAAAA,IAAI,EAAEhB,WAAW,CAACqB,YADb;AAELd,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMe,aAAa,GAAG,SAAhBA,aAAgB,CAACP,EAAD,EAAQ;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEhB,WAAW,CAACuB,cADb;AAELR,IAAAA,EAAE,EAAEA;AAFC,GAAP;AAID,CALM;AAOP,OAAO,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,iBAAP,EAA6B;AACtD,SAAO,UAACrB,QAAD,EAAc;AACnB,WAAOJ,WAAW,CAACO,WAAZ,CAAwBiB,IAAxB,EAA8BC,iBAA9B,EAAiDpB,IAAjD,CAAsD,UAAAG,QAAQ,EAAI;AACvEJ,MAAAA,QAAQ,CAACK,mBAAmB,CAACD,QAAD,CAApB,CAAR;AACD,KAFM,WAEE,UAAAE,KAAK,EAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,KAJM,CAAP;AAKD,GAND;AAOD,CARM;AAUP,OAAO,IAAMD,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACD,QAAD,EAAc;AAC/C,SAAO;AACLO,IAAAA,IAAI,EAAEhB,WAAW,CAAC2B,YADb;AAELlB,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID,CALM","sourcesContent":["import * as actionTypes from '../constants/actionTypes';\nimport ArticlesApi from '../api/articlesApi';\n\nexport const addArticle = (title, content) => {\n  return (dispatch) => {\n    return ArticlesApi.addArticle(title, content).then(article => {\n      return ArticlesApi.getArticles().then(articles => {\n        dispatch(successLoadArticles(articles));\n      })\n    }).catch(error => {\n      console.log('error', error)\n    });\n  }\n}\n\nexport const editArticle = (id) => {\n  return {\n    type: actionTypes.EDIT_ARTICLE,\n    id: id\n  };\n}\n\nexport const infoArticle = (id) => {\n  return (dispatch) => {\n    return ArticlesApi.getArticle(id).then(article => {\n      dispatch(successShowArticle(article))\n    })\n      .catch(error => console.log('error', error));\n  }\n}\n\nexport const successShowArticle = (article) => {\n  return {\n    type: actionTypes.INFO_ARTICLE,\n    article\n  }\n}\n\nexport const removeArticle = (id) => {\n  return {\n    type: actionTypes.REMOVE_ARTICLE,\n    id: id\n  };\n}\n\nexport const allArticles = (page, quantity_elements) => {\n  return (dispatch) => {\n    return ArticlesApi.getArticles(page, quantity_elements).then(articles => {\n      dispatch(successLoadArticles(articles));\n    }).catch(error => {\n      console.log('error', error)\n    });\n  }\n}\n\nexport const successLoadArticles = (articles) => {\n  return {\n    type: actionTypes.ALL_ARTICLES,\n    articles\n  };\n}"]},"metadata":{},"sourceType":"module"}